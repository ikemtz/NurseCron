name: 1.$(Year:yy).$(DayOfYear)$(Rev:.rr)
resources:
  - repo: self
variables:
  DomainName: 'Certifications'
  RestoreBuildProjects: 'src/MicroServices/$(DomainName)/**/*.csproj'
  TestProjects: 'src/MicroServices/$(DomainName)/**/*Tests/*.csproj'

jobs:
  - job: Database
    displayName: Database build and deploy
    pool: Hosted Windows 2019 with VS2019

    steps:
      - task: VSBuild@1
        displayName: 'Build solution DB Project'
        inputs:
          solution: src/MicroServices/$(DomainName)/**.sqlproj

      - task: PowerShell@2
        displayName: 'Artifact SQL Dacpacs'
        inputs:
          targetType: filePath
          filePath: 'src/MicroServices/artifact-dacpacs.ps1'
          arguments: '-sourceFolder $(build.SourcesDirectory) -artifactFolder $(build.artifactstagingdirectory)'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: dacpac_drop'
        inputs:
          ArtifactName: 'dacpac_drop'

  - job: APIs
    displayName: Build and test API code
    pool: Hosted Windows 2019 with VS2019

    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core sdk 2.x'
        inputs:
          version: 2.x

      - task: DotNetCoreCLI@2
        displayName: Restore
        inputs:
          command: restore
          projects: '$(RestoreBuildProjects)'

      - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
        displayName: 'Prepare analysis on SonarCloud'
        inputs:
          SonarCloud: 'SonarCloud IkeMtz'
          organization: ikemtz
          projectKey: Nurser_Certifications
          projectName: Nurser_Certifications
          extraProperties: |
            # Additional properties that will be passed to the scanner, 
            # Put one key=value per line, example:
            # sonar.exclusions=**/*.bin
            sonar.cs.vscoveragexml.reportsPaths=**/*.coveragexml
            # sonar.branch.name=$(Build.SourceBranch)

      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          projects: '$(RestoreBuildProjects)'
          arguments: '--configuration $(BuildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: 'Unigration Tests'
        inputs:
          command: test
          projects: '$(TestProjects)'
          arguments: '--configuration $(BuildConfiguration) --collect "Code coverage" --settings $(Build.SourcesDirectory)/test.RunSettings --filter TestCategory!=Integration'

      - task: PowerShell@2
        displayName: 'Code Coverage Converter'
        inputs:
          targetType: filePath
          filePath: 'coverage-converter.ps1'
          arguments: '-tempFolder $(Agent.WorkFolder)/_temp -testResultsFolder $(Common.TestResultsDirectory)'

      - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
        displayName: 'Run Code Analysis'

      - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
        displayName: 'Publish Quality Gate Result'

      - task: DotNetCoreCLI@2
        displayName: 'dotnet publish WebApi projects'
        inputs:
          command: publish
          publishWebProjects: false
          projects: 'src/MicroServices/$(DomainName)/**/*.WebApi/*.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
          zipAfterPublish: false

      - task: DotNetCoreCLI@2
        displayName: 'dotnet publish OData projects'
        inputs:
          command: publish
          publishWebProjects: false
          projects: 'src/MicroServices/$(DomainName)/**/*.OData/*.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
          zipAfterPublish: false

      - task: PowerShell@2
        displayName: 'Artifact CI/CD scripts'
        inputs:
          targetType: filePath
          filePath: 'src/MicroServices/artifact-ci-cd-scripts.ps1'
          arguments: '-sourceFolder $(build.SourcesDirectory) -artifactFolder $(build.artifactstagingdirectory)'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: ApiDrop'
        inputs:
          ArtifactName: ApiDrop
trigger: none
pr:
  branches:
    include:
      - master
  paths:
    include:
      - src/MicroServices/$(DomainName)/*

schedules:
  - cron: '0 0 * * Sun'
    displayName: 'Sunday 12:00 AM (UTC) weekly latest version build'
    branches:
      include:
        - master
